syntax = "proto3";

package proto.sample.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/nissy-dev/protocol-buffer-sandbox";

service PostService {
  rpc Get(PostServiceGetRequest) returns (PostServiceGetResponse) {
    option (google.api.http) = {
      post: "/v1/post/get"
      body: "*"
    };
  }

  rpc Search(PostServiceSearchRequest) returns (PostServiceSearchResponse) {
    option (google.api.http) = {
      post: "/v1/post/search"
      body: "*"
    };
  }
}

message PostServiceGetRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["id"]
    }
  };
  int32 id = 1;
}

message PostServiceGetResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["row"]
    }
  };
  Post row = 1;
}

message PostServiceSearchRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["keyword"]
    }
  };

  string keyword = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {pattern: "^start"}];
  string start = 2;
  string end = 3;
}

message PostServiceSearchResponse {
  repeated Post rows = 1;
}

message Post {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "id",
        "name",
        "title",
        "created_at"
      ]
    }
  };

  int32 id = 1;
  string name = 2;
  string title = 3;
  string created_at = 4;
}

message DateRange {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "start",
        "end"
      ]
    }
  };

  string start = 1;
  string end = 2;
}
